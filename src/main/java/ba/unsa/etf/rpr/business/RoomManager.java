package ba.unsa.etf.rpr.business;

import ba.unsa.etf.rpr.dao.DaoFactory;
import ba.unsa.etf.rpr.domain.Room;
import ba.unsa.etf.rpr.exceptions.HotelException;

import java.util.List;
/**
 * Business Logic Layer for management of Room
 * @author Dalila Krslak
 */
public class RoomManager {
    /**
     * Adds Room object to ROOM table
     * @param r Room
     * @return Room instance
     * @throws HotelException in case of error
     */
    public Room add(Room r) throws HotelException {
        if (r.getId() != 0){
            throw new HotelException("Can't add Room with ID. ID is autogenerated");
        }
        return DaoFactory.roomDao().add(r);
    }

    /**
     * Deletes Room object from ROOM table.
     * @param id id
     * @throws HotelException in case of an error
     */
    public void delete(int id) throws HotelException {
        DaoFactory.roomDao().delete(id);
    }

    /**
     * Updates Room object from ROOM table.
     * @param r Room
     * @throws HotelException in case of an error
     */
    public void update(Room r) throws HotelException {
        DaoFactory.roomDao().update(r);
    }

    /**
     * Fetches all Room objects from table ROOM and stores it in list
     * @return List of Room objects
     * @throws HotelException in case of an error
     */
    public List<Room> getAll() throws HotelException{
        return DaoFactory.roomDao().getAll();
    }

    /**
     * Fetches Room object from table ROOM defined by id given as parameter
     * @param roomId id
     * @return Room instance
     * @throws HotelException in case of an error
     */

    public Room getById(int roomId) throws HotelException{
        return DaoFactory.roomDao().getById(roomId);
    }
    public Room getByDescription(String description) throws HotelException{
        return DaoFactory.roomDao().getByDescription(description);
    }
}
