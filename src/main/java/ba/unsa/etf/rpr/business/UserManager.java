package ba.unsa.etf.rpr.business;

import ba.unsa.etf.rpr.dao.DaoFactory;
import ba.unsa.etf.rpr.domain.User;
import ba.unsa.etf.rpr.exceptions.HotelException;

import java.util.List;

public class UserManager {
    public void validateUserName(String name) throws HotelException{
        if (name == null || name.length() > 15 || name.length() < 5){
            throw new HotelException("Username must be between 5 and 15 chars");
        }
    }

    public User add(User u) throws HotelException {
        if (u.getId() != 0){
            throw new HotelException("Can't add User with ID. ID is autogenerated");
        }
        validateUserName(u.getUsername());

        try{
            return DaoFactory.userDao().add(u);
        }catch (HotelException e){
            if (e.getMessage().contains("UQ_NAME")){
                throw new HotelException("User with same username exists");
            }
            throw e;
        }
    }

    public void delete(int UserId) throws HotelException{
        try{
            DaoFactory.userDao().delete(UserId);
        }catch (HotelException e){
            if (e.getMessage().contains("FOREIGN KEY")){
                throw new HotelException("Cannot delete User which is related to reservations. First delete related reservations before deleting User.");
            }
            throw e;
        }

    }

    public User update(User u) throws HotelException {
        validateUserName(u.getUsername());
        return DaoFactory.userDao().update(u);
    }

    public List<User> getAll() throws HotelException{
        return DaoFactory.userDao().getAll();
    }

    public User getById(int userId) throws HotelException{
        return DaoFactory.userDao().getById(userId);
    }

}
